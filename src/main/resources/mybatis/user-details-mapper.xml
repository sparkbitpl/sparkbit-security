<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--suppress SqlResolve -->
<mapper namespace="pl.sparkbit.security.dao.mybatis.UserDetailsMapper">

    <resultMap id="loginUserDetailsResultMap" type="pl.sparkbit.security.login.LoginUserDetails">
        <constructor>
            <idArg column="user_id" javaType="String"/>
            <arg column="password" javaType="String"/>
            <arg column="enabled" javaType="Boolean"/>
            <arg column="deleted" javaType="Boolean"/>
        </constructor>
    </resultMap>

    <select id="selectLoginUserDetails" resultMap="loginUserDetailsResultMap">
        SELECT ${prefix}_id AS user_id, password, enabled, deleted FROM ${prefix}_credentials
        WHERE ${prefix}_id=#{userId}
    </select>

    <resultMap id="restUserDetailsResultMap" type="pl.sparkbit.security.domain.RestUserDetails">
        <constructor>
            <idArg column="auth_token" javaType="String"/>
            <arg column="user_id" javaType="String"/>
            <arg column="expiration_ts" javaType="java.time.Instant"/>
            <arg column="extra_authn_check_required" javaType="_boolean"/>
        </constructor>
        <collection property="roles" ofType="org.springframework.security.core.authority.SimpleGrantedAuthority">
            <constructor>
                <arg column="role" javaType="string"/>
            </constructor>
        </collection>
    </resultMap>

    <select id="selectRestUserDetails" resultMap="restUserDetailsResultMap">
        SELECT s.auth_token as auth_token, s.${prefix}_id AS user_id, ur.role, s.expiration_ts AS expiration_ts,
            s.extra_authn_check_required as extra_authn_check_required
        FROM ${prefix}_session s LEFT OUTER JOIN ${prefix}_role ur on s.${prefix}_id=ur.${prefix}_id
        WHERE s.auth_token=#{authToken} AND s.deletion_ts IS NULL
    </select>

    <select id="selectUserId" resultType="String">
        SELECT ${userTableIdColumnName} FROM ${userTableName} WHERE
        <foreach collection="authnAttributes" index="key" item="value" open="" separator="and" close="">
            ${key}=#{value}
        </foreach>
    </select>

</mapper>
